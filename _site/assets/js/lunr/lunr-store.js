var store = [{
        "title": "Baz Boom Identity",
        "excerpt":"Pictures of Goats section West Seattle Blog dingbat newspaper rubber cement Google+ newsroom cafe news.me rubber cement, Ushahidi Kindle Single syndicated Instagram HuffPo community mthomps, Mozilla iPhone app should isn’t a business model curmudgeon Snarkmarket Tim Carmody production of innocence. Fuego tweets community DocumentCloud metered model Gardening &amp; War section YouTube social media SEO information overload analytics Aron Pilhofer Journal Register data visualization WikiLeaks Groupon, collaboration Steve Jobs we need a Nate Silver AP What Would Google Do the power of the press belongs to the person who owns one Clay Shirky curmudgeon Voice of San Diego free as in beer dead trees the notion of the public Lucius Nieman.                                                                                                                                This is a sample gallery to go along with this case study.       hackgate copyright Lucius Nieman CNN leaves it there right-sizing a giant stack of newspapers that you’ll never read net neutrality algorithms RT algorithms TechCrunch 5% corruption, horse-race coverage Gardening &amp; War section CTR try PR CPC David Cohn shoot a photo algorithms content is king Android Snarkmarket crowdfunding, Fuego Twitter topples dictators YouTube abundance WordPress Reuters try PR stupid commenters should isn’t a business model bringing a tote bag to a knife fight.  ","categories": [],
        "tags": [],
        "url": "/portfolio/a/",
        "teaser": "/assets/images/unsplash-gallery-image-1-th.jpg"
      },{
        "title": "Arts7#",
        "excerpt":"Algorithm  每周至少做一个Leetcode算法题   第1道     【题目来源】   T9：斐波那契数列，何海涛《剑指Offer》   【题目】   写一个函数，输入参数n，输出斐波那契数列的第n项   【例子】   # 斐波那契数列从第0开始     0 1 1 2 3 5 8 13   【解答】           解法1：递归解法，容易理解，但效率太差，不予详细分析            解法2：动态规划法（推荐）       斐波那契的递推关系，也是DP的状态转移方程            解法3：乘方法,f(n)=M^n \\(M = \\left[ \\begin{matrix} 1 &amp; 1\\\\1 &amp; 0\\end{matrix} \\right]\\)       /**      * 解法2：动态规划，从底往上计算，避免重复计算      *  例子：f(0)+f(1)-&gt; f(2)      *       f(1)+f(2)-&gt; f(3)      *       ...      \t\t PreTwo+Preone-&gt; cur      *      * @param n      * @return      */     public int FibonacciByOrder(int n) {         if (n &lt; 2) {             return n;         }         int PrevOne = 1;         int PrevTwo = 0;         int cur = 0;         for (int i = 2; i &lt;= n; i++) {             cur = PrevOne + PrevTwo;             PrevTwo = PrevOne;             PrevOne = cur;         }         return cur;     }           【思考】      改编题1：一只青蛙一次可以跳上1 级台阶，也可以跳上2 级。求该青蛙跳上一个n级的台阶总共有多少种跳法   改编题2：在青蛙跳台阶的问题中，如果把条件改成：一只青蛙一次可以跳上 1级台阶，也可以跳上 2 级……它也可以跳上 n 级，此时该青蛙跳上一个 n级的台阶总共有多少种跳法？我们用数学归纳法可以证明f（n）=2n-1。   第2道     【题目来源】   T11：数值的整数次方，何海涛《剑指Offer》   【题目】   实现函数 double Power（double base, int exponent），求 base 的exponent次方。不得使用库函数，同时不需要考虑大数问题。   【例子】   // power(2,2) 4 // power(2,-2) 0.25   【解答】           解法1：循环法记录底数相乘的次数，很显然根据次方exp（幂）的定义：就是exp个base连续相乘。              这是所有人下意识都能想到的解法，不能体现算法训练的价值，这里不细分析，提醒注意：（1）底数为0的负整数次方，如0^-2，（2）指数exp除了正整数外为负数和零的情形                 解法2：二分法。二分法的本质是每次排除一半，那么是否可以根据公式1利用二分法写出O(logN)的解法呢，答案是当然可以。我们可以利用递归将指数n-&gt; n/2-&gt; n/4-&gt;…1逐步二分掉，直到满足基准条件 \\(a^0 = 1,a^1=a\\)       ​\t\t\t\t ​\t\t\t\t\t ​        \\[a^n = \\begin{cases} a^\\frac{n}{2}a^\\frac{n}{2} &amp; n为偶数 \\\\ a^\\frac{n-1}{2}a^\\frac{n-1}{2}a  &amp;n为奇数  \\end{cases}\\]      公式1      根据以上的分析，给出参考代码    public double myPow(double base, long exp) {         // 排除除0的异常         if (base ==0 &amp;&amp; exp &lt; 0) {             return 0;         }         if (exp == 0) {             return 1;         }         if (exp == 1) {             return base;         }         // 处理负指数幂         if (exp &lt; 0) {             exp = -exp;             base = 1 /base;         }         double result = myPow(base, exp&gt;&gt;1);         result *= result;         if ( exp%2 == 1 ) {             result *= base;         }         return result;     }   值得注意的是      int exp = [−2^31, 2^31 − 1],左边界取反会出现越界的错误，因此定义exp为long      【思考】         Review   阅读并点评至少1篇英文技术文章   【原文】：CH17.Release Your Code From Kathy Sierra’s Head first Java author   【译文】：   【点评】：   部署：指的是将程序员写的Java源代码经过处理加工成jar文件的过程，可以供其他人运行和充当轮子。   处理过程可以分为：编译、打包   JAR is Java ARchive（Java归档）,这是一种基于pkzip的文件格式，对于终端使用者来说，操作的是1个.jar文件，而不是成百上千的.class文件。           Deploying your application              本地：可执行的JAR文件       混合       远程                Separate source code and class files              sources目录：存放源代码       classes目录：存放字节码文件                Put your Java in a JAR              如何生成.jar                    cd MyProject/classes           jar -cvmf manifest.txt packFoof.jar javaranch                                Running (executing) the JAR              执行jar                    cd MyProject/classes           java -jar packFoof.jar                                Put your classes in packages                       为什么要创建包？                                   数一下有多少个List                                                                              保证class文件的唯一性，不要同名                              举例：叫孙少安的人很多，那怎么区分呢？最简单的就是根据户口，也就是你是xx省xx市xx县xx镇xx村的孙少安，我是另外一个村的孙少安也就可以区分了                                                         怎么避免包名冲突，保证包的唯一性                      域名反写                              sun官方给的命名规范建议是：反写的域名，借助域名唯一的特点来保证包不同名。例如：com.alibaba、org.apache                                 META-INF目录                       MANIFEST.MF文件                      指定jar包的main（）方法的位置                                 jar管理工具             Maven           Tip   学习至少一个技术技巧   总结的高频快捷键速查清单，全部经过测试，不灌水   Share   分享一篇有观点和思考的技术文章   ES官方的教程，轻巧结构清晰，Elasticsearch: 权威指南   米罗说      人生不在于做多少事，在于把关键的事做到极致。   ","categories": [],
        "tags": [],
        "url": "/arts7/",
        "teaser": null
      },{
        "title": "Hello World",
        "excerpt":"　　这是Jekyll—blog的第一篇文档  ","categories": [],
        "tags": [],
        "url": "/hello-world/",
        "teaser": null
      },{
        "title": "Usefullink",
        "excerpt":"优秀的网站      My博客园   深大黄惠教授   mmistakes   IT圈内前辈           CodingTour            Blankj            天下无鱼                                                                                                                       阮一峰                                                                 纯洁的微笑                             罗瞳                                                   编程  数据结构和算法  工程实战   社群                  知识星球–stormzhang                                                                                                                                       ","categories": [],
        "tags": [],
        "url": "/usefulLink/",
        "teaser": null
      },{
        "title": "这一周的复盘",
        "excerpt":"本篇是最近一周的复盘情况，专供自己使用   目标   以终为始，每天起床后第一件事，问问自己3个问题。第一，你现在是什么水平？第二，你想达到什么水平？第三，为了达到期望水平你打算怎么做？可以总结成现状-目标-行动6个关键字。目前，我的回答是：1）我现在处于1/10 x程序员的阶段（普通程序员为1 x）2）我想成为5 x程序员 3）借鉴10x程序员的工作习惯，结合自身，实践出一套最适合自己的习惯。   工作   目前遇到的问题1）汇报工作能力差。汇报项目进展时，描述模糊、不干脆，不能描述清楚目前处在什么阶段，当前遇到的问题，以及需要协调的资源，会让leader对你负责的部分失去控制，心里会很没有底。2）技术能力差。开发一个功能很吃力，工作没有效率，技术攻坚能力也不行，最头疼的问题是针对设计中遇到的问题，有时会找不到突破口，不知道先查哪些20%的关键资料，谷歌搜索往往也找不到什么有效结果，系统的学知识体系吧时间又不够用。3）逻辑性差。业务中部分关键的需求想不清楚原委，和同事交流的过程中稍复杂的场景也get不到讨论的重点。   为了解决上述这些硬伤，不能做吃等死啊。需要靠自己去摸索。此处待办   学习      极客时间专栏：10x程序员工作法   《毛选》选择看这本书的原因有2点。第一，视频号主XX医生推荐；第二，最近的情绪低迷，让我急切的想要找一个标准答案。看主席在追求些什么，想些什么重要的事情，也能提醒我去抓住本质   《Head First Design Pattern》：设计模式方面非常有趣的一本书，娓娓道来，就是太厚了，需要读者分解阅读计划，妄想一口吃成胖子，绝对会“读废了“   生活   休息的时间太少了，12点睡觉，5点半起床基本是最近的生活作息。黑眼圈深了好几圈，心肺偶尔会有重压感觉，手指偶尔不受控的抖几下，甚至都胆小的认为随时有可能猝S，这些症状都是身体发出的警告信号，准备周末去做个体检。运动是力量源泉，没有比他更好的保健品了，我有个经验，就是每次头脑压力大的时候，我去跑步10-20分钟，身体自然出汗了就会好很多   ","categories": [],
        "tags": [],
        "url": "/%E8%BF%99%E4%B8%80%E5%91%A8%E7%9A%84%E5%A4%8D%E7%9B%98/",
        "teaser": null
      },{
        "title": "水稻之父走了",
        "excerpt":"2021-05-22，人民日报证实，袁隆平先生去世，享年91岁。在此，我表示缅怀，袁爷爷走好。这个年纪事实上已经是高寿了，我不想出风头，我只想把真实感受记录下来。   上午的谣言风波   上午，很多渠道发声，袁老去世的消息瞬间散布开来，大家纷纷转发去世消息，表示缅怀。半个小时后，情况反转，经审查该消息为谣言，众多网友纷纷删缅怀帖。我们真的有必要争分夺秒的去转发未证实的言论么，也许情绪驱动就会少些理智吧，或许还有其它原因吧。   他带给我们了什么   我们的印象模糊，在这个讯息爆炸的时代，或许也懒得去搜索一下他的生平，但是大概知道他是杂交水稻的重要贡献者，共和国勋章的获得者，解决了很多人饿肚子的问题。当然，我也了解的少，不过在我的素材库里有这样几条链接，感觉这个爷爷挺有意思。   90后梗王   在严峻的事实面前放轻松一点   全国科普日，院士寄语-Chance favors the prepared mind!   我们在缅怀他什么   少了一位厉害的带头人才   袁老在粮食领域，那是权威，少了他的陪伴，他的高瞻远瞩，是我们的损失。   少了一位打样的榜样   袁老的生活态度非常积极，热爱运动，游泳、排球他都喜欢，90后了还能做科研，没有得老年痴呆。有时候，我也会有很大的压力，焦虑和迷茫，想听听过来人的经验，而不是被当下的某些成功学的训练营割韭菜。平时积累的这些过来人的素材就会给你一些启发和动力，这些打样的榜样的认识只能日积月累。   祝他继续天性自由，个性散漫   离开地球这个大家庭，去到另外的世界，他肯定能继续快乐，天性自由，个性散漫。   舍近求远，怪圈   袁爷爷相对于家人来说，是远水。我们的亲人和我们朝夕相处，平时更应该给予细节的关心。树欲静而风不止，子欲养而亲不待会是比较可悲的场景。多关注近处的东西，和自己相关的东西，做个俗人挺好。   ","categories": [],
        "tags": [],
        "url": "/%E6%B0%B4%E7%A8%BB%E4%B9%8B%E7%88%B6%E8%B5%B0%E4%BA%86/",
        "teaser": null
      },{
        "title": "Git常用的几条命令",
        "excerpt":"推送到远程 git push origin gh-pages  ","categories": [],
        "tags": [],
        "url": "/Git%E5%B8%B8%E7%94%A8%E7%9A%84%E5%87%A0%E6%9D%A1%E5%91%BD%E4%BB%A4/",
        "teaser": null
      }]
